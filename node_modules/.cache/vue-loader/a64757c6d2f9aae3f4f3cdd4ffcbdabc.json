{"remainingRequest":"/Users/xingjingjie/Desktop/DEMO-TodoList/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xingjingjie/Desktop/DEMO-TodoList/src/views/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xingjingjie/Desktop/DEMO-TodoList/src/views/List.vue","mtime":1575420085184},{"path":"/Users/xingjingjie/Desktop/DEMO-TodoList/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xingjingjie/Desktop/DEMO-TodoList/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/xingjingjie/Desktop/DEMO-TodoList/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xingjingjie/Desktop/DEMO-TodoList/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlJwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImxpc3QiLAogIHN0b3JlLAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAKICAgIH07CiAgfSwKCiAgY29tcG9uZW50czoge30sCgogIGNvbXB1dGVkOiB7CiAgICBwYWdlTGlzdHMoKXsKICAgICAgcmV0dXJuIHN0b3JlLnN0YXRlLmxpc3RzCiAgICB9LAogIH0sCgogIG1vdW50ZWQ6IHt9LAoKICBtZXRob2RzOiB7CiAgICBkZWxldGVSb3coaW5kZXgsIHJvd3MpIHsKICAgICAgICByb3dzLnNwbGljZShpbmRleCwgMSk7CiAgICAgIH0sCiAgICAgIC8vCiAgICBlZGl0KGluZGV4LCByb3cpewogICAgICAvL3N0b3JlLmNvbW1pdCgnZ2V0VGl0bGUnLHRoaXMudGl0bGUpCiAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyhyb3cudGl0bGUpOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7cGF0aDogJy9lZGl0JyxxdWVyeToge0lkOmluZGV4fX0pCiAgICB9CiAgfQp9Cgo="},{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/views","sourcesContent":["<!-- list -->\n<template>\n<div>\n  <div id=\"nav\">\n      <router-link to=\"/\">登陆</router-link> |\n      <router-link to=\"/add\">添加</router-link>\n      \n    </div>\n  <el-table\n      :data=\"pageLists\"\n      style=\"width: 80%; margin:0 auto; text-align:center\">\n      <el-table-column\n        label=\"事项标题\"\n        width=\"180\"\n        prop=\"title\">\n      </el-table-column>\n\n      <el-table-column\n        label=\"截止时间\"\n        width=\"180\"\n        prop=\"datetime\">\n      </el-table-column>\n\n      <el-table-column\n        label=\"事项内容\"\n        prop=\"content\">\n      </el-table-column>\n      <el-table-column\n      fixed=\"right\"\n      label=\"操作\"\n      width=\"120\">\n      <template slot-scope=\"scope\">\n        <el-button\n          @click.native.prevent=\"deleteRow(scope.$index, pageLists)\"\n          type=\"text\"\n          size=\"small\">\n          移除\n        </el-button>\n        <el-button\n          @click.native.prevent=\"edit(scope.$index, scope.row)\"\n          type=\"text\"\n          size=\"small\">\n          编辑\n        </el-button>\n      </template>\n    </el-table-column>\n  </el-table>\n\n\n</div>\n</template>\n\n<script>\nimport store from '@/store'\nexport default {\n  name: \"list\",\n  store,\n  data () {\n    return {\n     \n    };\n  },\n\n  components: {},\n\n  computed: {\n    pageLists(){\n      return store.state.lists\n    },\n  },\n\n  mounted: {},\n\n  methods: {\n    deleteRow(index, rows) {\n        rows.splice(index, 1);\n      },\n      //\n    edit(index, row){\n      //store.commit('getTitle',this.title)\n      window.console.log(row.title);\n      this.$router.push({path: '/edit',query: {Id:index}})\n    }\n  }\n}\n\n</script>\n<style lang='scss' scoped>\n\n</style>"]}]}